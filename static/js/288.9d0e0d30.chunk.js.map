{"version":3,"file":"static/js/288.9d0e0d30.chunk.js","mappings":"wLACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAuG,sBAAvG,EAAwI,0B,UCAxI,G,OAAgL,0B,UCUhL,EAJqC,SAACA,GACpC,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUC,SAAEJ,EAAMK,SAC3C,E,sCC2CMC,GAAsBC,EAAAA,EAAAA,GAAU,CACpCC,KAAM,wBADoBD,EAlBL,SAACP,GACtB,OACES,EAAAA,EAAAA,MAAA,QAAMC,SAAUV,EAAMW,aAAaP,SAAA,EACjCH,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CACJC,UAAWC,EAAAA,GACXC,KAAK,iBACLC,YAAY,qBACZC,SAAU,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAiB,WAG1ClB,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,aAIhB,IAMA,EAjDgB,SAACJ,GACf,IAAIoB,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAC,OACxCxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACX,KAAMU,EAAEV,KAAiBY,GAAIF,EAAEE,IAAZF,EAAEE,GAAgB,IAG/CC,EAAkBR,EAAMS,SAASL,KAAI,SAACM,GAAC,OACzC7B,EAAAA,EAAAA,KAAC8B,EAAO,CAAC1B,QAASyB,EAAEzB,QAAoBsB,GAAIG,EAAEH,IAAZG,EAAEH,GAAgB,IAOtD,OACElB,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAUC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAAEkB,KACjCrB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,KAChBM,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAWC,SAAA,EACzBH,EAAAA,EAAAA,KAAA,OAAAG,SAAMwB,KACN3B,EAAAA,EAAAA,KAACK,EAAmB,CAACI,SAVP,SAACsB,GACnBhC,EAAMiC,YAAYD,EAAOE,eAC3B,SAYF,E,UClBA,GAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAPoB,SAAChB,GACrB,MAAO,CACLC,YAAaD,EAAMC,YAEvB,IAGyBgB,EAAAA,EAAAA,GAAA,GAAOC,EAAAA,IAC9BC,EAAAA,EAFF,CAGEC,E","sources":["webpack://first_01/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://first_01/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__vlyOi\",\"dialogsItems\":\"Dialogs_dialogsItems__Va6vy\",\"line\":\"Dialogs_line__eyeR+\",\"messages\":\"Dialogs_messages__wVK+4\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Message_dialogs__IqbSN\",\"dialogsItems\":\"Message_dialogsItems__QrnSd\",\"dialog\":\"Message_dialog__k-G0W\",\"messages\":\"Message_messages__v5EvP\",\"message\":\"Message_message__WSOAX\"};","import React from \"react\";\r\nimport s from \"./Message.module.css\";\r\n\r\ntype PropsType = {\r\n  message: string;\r\n};\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n\r\n  let messageElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} id={m.id} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.line}></div>\r\n      <div className={s.messages}>\r\n        <div>{messageElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newMessageText\"\r\n          placeholder=\"Enter your message\"\r\n          validate={[required, maxLengthCreator(100)]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n  form: \"dialogAddMessageForm\",\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { actions } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport React from \"react\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, { ...actions }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","_jsx","className","s","children","message","AddMessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","maxLengthCreator","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","id","messageElements","messages","m","Message","values","sendMessage","newMessageText","compose","connect","_objectSpread","actions","withAuthRedirect","Dialogs"],"sourceRoot":""}