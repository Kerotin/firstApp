{"version":3,"file":"static/js/172.c440fe81.chunk.js","mappings":"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","sources":["webpack://first_01/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://first_01/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://first_01/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__Jv0Yk\",\"posts\":\"MyPosts_posts__2Mhy-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ESVTP\"};","import s from \"./Post.module.css\";\r\nfunction Post(props) {\r\n  return (\r\n    <div className={s.item}>\r\n      <img\r\n        src=\"https://cdn.dribbble.com/users/388052/screenshots/15969217/media/541d0e931dc044f08db966abeb598aec.jpg?compress=1&resize=400x300&vertical=top\"\r\n        alt=\"avatar\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likes}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Posts/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst AddNewPostForm = (props) => {\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder=\"New Post Text\"\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLengthCreator(10)]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostForm = reduxForm({\r\n  form: \"ProfileAddNewPostForm\",\r\n})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post key={p.id} message={p.message} likes={p.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Post</h3>\r\n      <PostForm onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header_image\":\"ProfileInfo_header_image__wQzl3\",\"userData\":\"ProfileInfo_userData__Sy5mq\",\"user\":\"ProfileInfo_user__HcVLB\",\"userAvatar\":\"ProfileInfo_userAvatar__HXnw6\",\"mainPhoto\":\"ProfileInfo_mainPhoto__JYzFZ\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWhithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateUserStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"-----\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusWhithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWhithHooks from \"./ProfileStatusWithHooks\";\r\nimport userAvatar from \"./../../../assets/images/userAvatar.jpg\";\r\n\r\nfunction ProfileInfo({\r\n  profile,\r\n  status,\r\n  updateUserStatus,\r\n  isOwner,\r\n  savePhoto,\r\n}) {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <div className={s.header_image}>\r\n        <img\r\n          src=\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\"\r\n          alt=\"head\"\r\n        />\r\n      </div> */}\r\n      <div className={s.user}>\r\n        <div className={s.userAvatar}>\r\n          <img\r\n            src={profile.photos.large || userAvatar}\r\n            className={s.mainPhoto}\r\n            // src=\"https://ps.w.org/user-avatar-reloaded/assets/icon-256x256.png?rev=2540745\"\r\n            alt=\"avatar\"\r\n          />\r\n          {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        </div>\r\n        <div className={s.userData}>\r\n          <div className=\"user-name\">Имя: {profile.fullName}</div>\r\n          <ProfileStatusWhithHooks\r\n            status={status}\r\n            updateUserStatus={updateUserStatus}\r\n          />\r\n          <div className=\"contacts\">\r\n            <div>\r\n              <div>Контакты:</div>\r\n              <div>\r\n                <a href=\"#ss\">{profile.contacts.facebook}</a>\r\n              </div>\r\n              <div>\r\n                <a href=\"#sss\">{profile.contacts.instagram}</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateUserStatus={props.updateUserStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  savePhoto,\r\n} from \"../../redux/profile-reducer\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) userId = this.props.authorizedUserId;\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    let userId = this.props.match.params.userId;\r\n    if (prevProps.match.params.userId !== userId) {\r\n      let userId = this.props.authorizedUserId;\r\n      this.props.getUserProfile(userId);\r\n      this.props.getUserStatus(userId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} match={{ location, navigate, params }} />;\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    savePhoto,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" replace={true} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["props","_jsxs","className","s","children","_jsx","src","alt","message","likes","PostForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","name","component","Textarea","validate","required","maxLengthCreator","React","postsElements","posts","map","p","Post","likesCount","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostCreator","MyPosts","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateUserStatus","onChange","e","currentTarget","value","_ref","profile","isOwner","savePhoto","photos","large","userAvatar","type","target","files","length","fullName","ProfileStatusWhithHooks","href","contacts","facebook","instagram","Preloader","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","match","params","authorizedUserId","getUserProfile","getUserStatus","prevProps","Profile","_objectSpread","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","Navigate","to","replace"],"sourceRoot":""}